p也用到了霍夫曼编码。
各种压缩算法和压缩格式（rar,jpg,png,mp4）等等，都有参考霍夫曼编码的思想。

关于霍夫曼编码，建议大家仔细阅读wiki。

该wiki的例子中构建了1棵霍夫曼树（带权路径长度最短的二叉树）。

字母频率如下:



其中1种霍夫曼的编码:



那么英文单词 FORGET 的编码为 0000011001010111（每位代表1个bit）。

这里有一篇英文文章。

文章中出现的Symbol和Frequenncy如下:

(' ', 100)
(',', 7)
('.', 10)
('a', 36)
('b', 3)
('c', 8)
('d', 18)
('e', 42)
('f', 6)
('g', 13)
('h', 40)
('i', 31)
('j', 1)
('k', 3)
('l', 25)
('m', 11)
('n', 36)
('o', 23)
('p', 3)
('q', 1)
('r', 20)
('s', 25)
('t', 45)
('u', 3)
('v', 1)
('w', 14)
('x', 1)
('y', 5)
('z', 1)
基于以上的频率，@奥利奥构造了1棵霍夫曼树。(PS:该树已丢，粗心的奥利奥找不到了)

并根据该树对文章进行了编码。编码如下（每位代表1个bit）:



本题的答案在文章里。

http://www.qlcoder.com/task/7680
